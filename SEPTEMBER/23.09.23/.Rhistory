4+1
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("dplyr")
library("dplyr")
data <- data.frame(x1 = 1:5,                     # Create example data
x2 = letters[1:5],
group = c("gr1", "gr2", "gr1", "gr3", "gr2"))
data                                             # Print data to RStudio console
#   x1 x2 group
# 1  1  a   gr1
# 2  2  b   gr2
# 3  3  c   gr1
# 4  4  d   gr3
# 5  5  e   gr2
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
mpg
library(tidyverse)
#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
#> ✔ dplyr     1.1.2     ✔ readr     2.1.4
#> ✔ forcats   1.0.0     ✔ stringr   1.5.0
#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1
#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0
#> ✔ purrr     1.0.1
#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
#> ✖ dplyr::filter() masks stats::filter()
#> ✖ dplyr::lag()    masks stats::lag()
#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
packages("tidyverse")
package("ggplot2")
library(ggplot2)
mpg
#> # A tibble: 234 × 11
#>   manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class
#>   <chr>        <chr> <dbl> <int> <int> <chr>      <chr> <int> <int> <chr> <chr>
#> 1 audi         a4      1.8  1999     4 auto(l5)   f        18    29 p     compa…
#> 2 audi         a4      1.8  1999     4 manual(m5) f        21    29 p     compa…
#> 3 audi         a4      2    2008     4 manual(m6) f        20    31 p     compa…
#> 4 audi         a4      2    2008     4 auto(av)   f        21    30 p     compa…
#> 5 audi         a4      2.8  1999     6 auto(l5)   f        16    26 p     compa…
#> 6 audi         a4      2.8  1999     6 manual(m5) f        18    26 p     compa…
#> # ℹ 228 more rows
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)color=class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class, shape = class)
ggplot(data = mpg) +
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
#> Warning: Using size for a discrete variable is not advised.
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class)color=RED)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class)color="RED")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class)color = "blue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "red")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "orange")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "darkorange")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "darkorange" shape= class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "darkorange" ,shape= class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = class ,shape= class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = class ,shape= class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class)color="RED")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class)color="red")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class),color="red")
library(tidyverse)
as_tibble(iris)
tibble(
x = 1:5,
y = 1,
z = x ^ 2 + y
)
tibble(
x = 1:5,
y = 6:10,
z = x ^ 2 + y
)
tibble(
x = 1:5,
y = 6:10,
z = x  + y
)
df <- tibble(x = 1:5,
+     y = 6:10,
df <- tibble(x = 1:5,
y = 6:10,
z = x  + y)
df
as_tibble(df)
df <- tibble(
x = runif(5),
y = rnorm(5)
)
df
df$x
df = read_csv("a,b,c
1,2,3
4,5,6")
df
df = read_csv("C:\Users\jehan\Downloads\abc.csv")
df = read_csv("C:\\Users\\jehan\\Downloads\\abc.csv")
df
df = read_csv("C:\\Users\\jehan\\Downloads\\abc.csv", col_names = FALSE)
df
df = read_csv("C:\\Users\\jehan\\Downloads\\abc.csv", col_names = c("p", "q", "r"))
df
df = read_csv("C:\\Users\\jehan\\Downloads\\abc.csv", col_names = c("p", "q", "r"))
df
df = read_csv("C:\\Users\\jehan\\Downloads\\abc.csv", col_names = c("p", "q", "r"))
df
df = read_csv("C:\\Users\\jehan\\Downloads\\abc.csv", col_names = c("p", "q", "r"), na=".")
df
df = read_csv("C:\\Users\\jehan\\Downloads\\abc.csv", col_names = c("p", "q", "r"), na="qwq")
df
df = read_csv("C:\\Users\\jehan\\Downloads\\abc.csv", col_names = c("p", "q", "r"), na="qwq")
df
df = read_csv("C:\\Users\\jehan\\Downloads\\abc.csv", col_names = c("p", "q", "r"), na=".")
df
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
library(tidyverse)
flights
filter(flights, month == 1, day == 1)
filter(flights, month == 11, day == 1)
filter(flights, month == 111, day == 1)
filter(flights, month == 1, day == 1)
filter(flights, month == 1, day == 1, dep_delay > 0)
filter(flights, month == 1, day == 1, dep_delay < 0)
filter(flights, month == 1, day == 1, dep_delay < -1)
filter(flights, month == 1, day == 1, dep_delay < -6)
filter(flights, month == 1, day == 1)
filter(flights, month == 1 & month == 2)
filter(flights, month == 1 | month == 2)
filter(flights, month == 1 | month == 2, dep_delay < 0)
df <- filter(flights, month == 1 | month == 2, dep_delay < 0)
View(df)
View(df)
View(df)
df
library(nycflights13)
library(tidyverse)
filter(flights, month == 1, day == 1)
table <- filter(flights, month == 10 | month == 12, dep_delay < 0)
View(table)
table
library(nycflights13)
library(tidyverse)
filter(flights, month == 1, day == 1)
table <- filter(flights, month == 10 | month == 12, dep_delay < 0)
ggplot(data = table) +
geom_point(mapping = aes(x = table[[2]], y = table[[11]]))
library(nycflights13)
library(tidyverse)
filter(flights, month == 1, day == 1)
table <- filter(flights, dep_delay < 0)
ggplot(data = table) +
geom_point(mapping = aes(x = table[[2]], y = table[[11]]))
library(nycflights13)
library(tidyverse)
filter(flights, month == 1, day == 1)
table <- filter(flights, dep_delay < 0)
ggplot(data = table) +
geom_point(mapping = aes(x = data[[2]], y = data[[11]]))
library(nycflights13)
library(tidyverse)
table <- filter(flights, dep_delay < 0)
ggplot(data = table) +
geom_point(mapping = aes(x = data[[2]], y = data[[11]]))
library(nycflights13)
library(tidyverse)
table <- filter(flights, dep_delay < 0)
ggplot(data = table) +
geom_point(mapping = aes(x = .data[[2]], y = .data[[11]]))
library(nycflights13)
library(tidyverse)
table <- filter(flights, dep_delay < 0)
ggplot(data = table) +
geom_point(mapping = aes(x = table[[2]], y = table[[11]]))
library(nycflights13)
library(tidyverse)
table <- filter(flights, dep_delay < 0)
ggplot(data = table) +
geom_point(mapping = aes(x = table[[2]], y = table[[11]], color=table[[2]]))
library(nycflights13)
library(tidyverse)
table <- filter(flights, dep_delay < 0)
ggplot(data = table) +
geom_point(mapping = aes(x = table[[2]], y = table[[11]], color=table[[2]])) + scale_x_continuous()
library(nycflights13)
library(tidyverse)
table <- filter(flights, dep_delay < 0)
ggplot(data = table) +
geom_bar(mapping = aes(x = table[[2]], y = table[[11]], color=table[[2]]))
library(nycflights13)
library(tidyverse)
table <- filter(flights, dep_delay < 0)
ggplot(data = table) +
geom_bar(mapping = aes(x = table[[2]], y = table[[11]], color=table[[2]]))
library(nycflights13)
library(tidyverse)
table <- filter(flights, dep_delay < 0)
ggplot(data = table) +
geom_bar(mapping = aes(x = table[[2]], y = table[[11]]))
library(nycflights13)
library(tidyverse)
table <- filter(flights, dep_delay < 0)
ggplot(data = table) +
stat_count(mapping = aes(x = table[[2]], y = table[[11]]))
library(nycflights13)
library(tidyverse)
table <- filter(flights, dep_delay < 0)
ggplot(data = table) +
geom_bar(mapping = aes(x = table[[2]], y = table[[11]]), stat = "identity")
table <- filter(flights, dep_delay < 0)
month <- table[[2]]
month
library(nycflights13)
library(tidyverse)
table <- filter(flights, dep_delay < 0)
month <- table[[2]]
ggplot(data = table) +
geom_bar(mapping = aes(x = month, y = table[[11]]), stat = "identity")
mpg
mpg <- mpg
View(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
library(nycflights13)
library(tidyverse)
table <- filter(flights, month == 1, dep_delay < 0)
month <- table[[2]]
ggplot(data = table) +
geom_bar(mapping = aes(x = month, y = table[[11]]), stat = "identity")
library(nycflights13)
library(tidyverse)
table <- filter(flights, month == 1, dep_delay < 0)
month <- table[[2]]
ggplot(data = table) +
geom_point(mapping = aes(x = table[[3]], y = table[[11]]))
library(nycflights13)
library(tidyverse)
table <- filter(flights, dep_delay < 0)
month <- table[[2]]
ggplot(data = table) +
geom_point(mapping = aes(x = table[[3]], y = table[[11]]))
library(nycflights13)
library(tidyverse)
table <- filter(flights, month == 1, dep_delay < 0)
month <- table[[2]]
ggplot(data = table) +
geom_point(mapping = aes(x = table[[3]], y = table[[11]]))
install.packages("googlesheets4")
library(googlesheets4)
read_sheet("https://docs.google.com/spreadsheets/d/1FL6JxJ1L-NBxt_1IfBk6KKQca_bB066I-UlzS2EPmP8/edit#gid=960400146")
library(googlesheets4)
library(googlesheets4)
read_sheet("https://docs.google.com/spreadsheets/d/1FL6JxJ1L-NBxt_1IfBk6KKQca_bB066I-UlzS2EPmP8/edit#gid=960400146")
ui <- fluidPage(
numericInput("count", label = "Number of values", value = 100)
)
library(shiny); runApp('C:/Users/jehan/OneDrive/Desktop/WORK/test-24.09.23.R')
runApp('C:/Users/jehan/OneDrive/Desktop/WORK/test-24.09.23.R')
library(shiny); runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
library(shiny); runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
library(shiny); runApp('test-24.09.23.R')
library(shiny); runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
library(shiny); runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
t_test <- function(x1, x2) {
test <- t.test(x1, x2)
# use sprintf() to format t.test() results compactly
sprintf(
"p value: %0.3f\n[%0.2f, %0.2f]",
test$p.value, test$conf.int[1], test$conf.int[2]
)
}
shinyApp(ui, server3)
library(shiny); runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
library(shiny); runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
x
x()
y()
runApp('test-24.09.23.R')
x
runApp('test-24.09.23.R')
runApp('test-24.09.23.R')
ui <- fluidPage(
numericInput("a", "value:", 10, min = 1, max = 100),
numericInput("b", "value:", 15, min = 1, max = 100),
numericInput("c", "value:", 20, min = 1, max = 100),
numericInput("d", "value:", 30, min = 1, max = 100),
verbatimTextOutput("value"),
textOutput("z")
)
server <- function(input, output, session) {
c <- reactive(input$a + input$b)
e <- reactive(c() + input$d)
output$f <- renderText(e())
}
library(shiny)
ui <- fluidPage(
numericInput("a", "value:", 10, min = 1, max = 100),
numericInput("b", "value:", 15, min = 1, max = 100),
numericInput("c", "value:", 20, min = 1, max = 100),
numericInput("d", "value:", 30, min = 1, max = 100),
verbatimTextOutput("value"),
textOutput("z")
)
server <- function(input, output, session) {
c <- reactive(input$a + input$b)
e <- reactive(c() + input$d)
output$f <- renderText(e())
}
server <- function(input, output, session) {
c <- reactive(input$a + input$b)
e <- reactive(c() + input$d)
output$f <- renderText(e())
}
ui <- fluidPage(
numericInput("a", "value:", 10, min = 1, max = 100),
numericInput("b", "value:", 15, min = 1, max = 100),
numericInput("c", "value:", 20, min = 1, max = 100),
numericInput("d", "value:", 30, min = 1, max = 100),
verbatimTextOutput("value"),
textOutput("f")
)
ui <- fluidPage(
numericInput("a", "value:", 10, min = 1, max = 100),
numericInput("b", "value:", 15, min = 1, max = 100),
numericInput("d", "value:", 30, min = 1, max = 100),
verbatimTextOutput("value"),
textOutput("f")
)
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
numericInput("a", "value:", 10, min = 1, max = 100),
numericInput("b", "value:", 15, min = 1, max = 100),
numericInput("d", "value:", 30, min = 1, max = 100),
verbatimTextOutput("value"),
textOutput("f")
)
server <- function(input, output, session) {
c <- reactive(input$a + input$b)
e <- reactive(c() + input$d)
output$f <- renderText(e())
}
shinyApp(ui, server)
output$f <- renderText(e(output:))
runApp('text-24.09.2023-02.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('text-24.09.2023-02.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
library(shiny); runApp('24.09.2023-3.R')
runApp('text-24.09.2023-02.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
runApp('24.09.2023-3.R')
range <- reactive(range(var(), na.rm = TRUE))
var <- reactive(df[[input$var]])
range <- reactive(range(var(), na.rm = TRUE))
ui <- fluidPage(
var <- reactive(df[[input$var]]),
range <- reactive(range(var(), na.rm = TRUE))
)
ui <- fluidPage(
var <- reactive(df[[input$var]]),
range <- reactive(range(var(), na.rm = TRUE))
)
ui <- fluidPage(
va <- reactive(df[[input$var]]),
range <- reactive(range(var(), na.rm = TRUE))
)
ui <- fluidPage(
va <- reactive(df[[input$var]]),
range <- reactive(range(var(), na.rm = TRUE))
)
ui <- fluidPage(
var() <- reactive(df[[input$var]]),
range <- reactive(range(var(), na.rm = TRUE))
)
ui <- fluidPage(
var() <- reactive(df[[input$var]]),
range() <- reactive(range(var(), na.rm = TRUE))
)
?var
ui <- fluidPage(
var(x, y = NULL, na.rm = FALSE, use),
#var <- reactive(df[[input$var]]),
range <- reactive(range(var(), na.rm = TRUE))
)
ui <- fluidPage(
renderText <- reactive(df[[input$var]]),
renderText <- reactive(range(var(), na.rm = TRUE))
)
ui <- fluidPage(
renderText <- reactive(df[[input$var]]),
renderText <- reactive(range(var(), na.rm = TRUE))
)
shinyApp(ui, server)
library(shiny); runApp('123.R')
runApp('24.09.2023-3.R')
